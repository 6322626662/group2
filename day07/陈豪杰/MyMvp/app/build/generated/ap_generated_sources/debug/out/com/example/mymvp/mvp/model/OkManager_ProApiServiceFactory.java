// Generated by Dagger (https://dagger.dev).
package com.example.mymvp.mvp.model;

import com.example.mymvp.mvp.model.api.ApiService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class OkManager_ProApiServiceFactory implements Factory<ApiService> {
  private final OkManager module;

  public OkManager_ProApiServiceFactory(OkManager module) {
    this.module = module;
  }

  @Override
  public ApiService get() {
    return proApiService(module);
  }

  public static OkManager_ProApiServiceFactory create(OkManager module) {
    return new OkManager_ProApiServiceFactory(module);
  }

  public static ApiService proApiService(OkManager instance) {
    return Preconditions.checkNotNull(instance.proApiService(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
